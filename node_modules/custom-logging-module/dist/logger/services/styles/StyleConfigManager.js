"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StyleConfigManager = void 0;
const LoggerStylesConfig_1 = require("../../../models/LoggerStylesConfig");
const LoggerStylesConfigLib_1 = require("../../../models/LoggerStylesConfigLib");
const LoggerMode_1 = require("../../../types/LoggerMode");
class StyleConfigManager {
    constructor() {
        this.loggerStylesConfig = new LoggerStylesConfig_1.LoggerStylesConfig();
    }
    // Méthode pour obtenir l'instance singleton
    static getInstance() {
        if (!this.instance) {
            this.instance = new StyleConfigManager();
        }
        return this.instance;
    }
    // Initialiser ou mettre à jour la configuration de style en fonction du LoggerConfig
    updateStyleConfig(loggerConfig) {
        let styleConfigOptions;
        switch (loggerConfig.loggerMode) {
            case LoggerMode_1.LoggerMode.CLASSIC:
                styleConfigOptions = LoggerStylesConfigLib_1.classicOptions;
                break;
            case LoggerMode_1.LoggerMode.COLORED:
                styleConfigOptions = LoggerStylesConfigLib_1.coloredOptions;
                break;
            case LoggerMode_1.LoggerMode.DOCKER:
                styleConfigOptions = LoggerStylesConfigLib_1.dockerOptions;
                break;
            default:
                styleConfigOptions = {}; // Configurations par défaut
                break;
        }
        // Mise à jour de la configuration de style
        this.loggerStylesConfig.updateConfig(styleConfigOptions);
    }
    // Méthode pour accéder à la configuration de style actuelle
    getLoggerStylesConfig() {
        return this.loggerStylesConfig;
    }
}
exports.StyleConfigManager = StyleConfigManager;
//# sourceMappingURL=StyleConfigManager.js.map