"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerClient = void 0;
const LoggerConfig_1 = require("../models/LoggerConfig");
const LoggingService_1 = require("./LoggingService");
const LogLevel_1 = require("../types/LogLevel");
class LoggerClient {
    constructor(loggerMode, serviceName, isMainProcess = false, logLevel = LogLevel_1.LogLevel.INFO, color) {
        // Crée une configuration de logger spécifique à ce client
        const loggerConfig = new LoggerConfig_1.LoggerConfig(logLevel, loggerMode);
        // Initialise LoggingService avec la configuration spécifique si nécessaire
        this.ensureLoggingServiceInitialized(loggerConfig);
        // Configuration spécifique du service client
        this.serviceMetadata = { serviceName, isMainProcess, color };
        // Enregistrement du service
        LoggingService_1.LoggingService.getInstance().registerServiceIfNeeded(this.serviceMetadata);
    }
    log(level, message) {
        LoggingService_1.LoggingService.getInstance().log(this.serviceMetadata, level, message);
    }
    ensureLoggingServiceInitialized(loggerConfig) {
        if (!LoggingService_1.LoggingService.isInitialized()) {
            // Initialise le service de log avec la configuration spécifique au client et la configuration par défaut des styles
            LoggingService_1.LoggingService.initialize(loggerConfig);
        }
        else {
            // Optionnel : Mettre à jour la configuration si nécessaire
            // LoggingService.getInstance().updateConfig(loggerConfig, defaultLoggerStylesConfig);
        }
    }
}
exports.LoggerClient = LoggerClient;
//# sourceMappingURL=LoggerClient.js.map